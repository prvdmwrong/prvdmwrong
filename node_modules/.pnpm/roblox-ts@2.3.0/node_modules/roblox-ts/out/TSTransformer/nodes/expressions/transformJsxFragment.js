"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformJsxFragment = void 0;
const luau_ast_1 = __importDefault(require("@roblox-ts/luau-ast"));
const diagnostics_1 = require("../../../Shared/diagnostics");
const DiagnosticService_1 = require("../../classes/DiagnosticService");
const transformJsxChildren_1 = require("../jsx/transformJsxChildren");
const createRoactIndex_1 = require("../../util/jsx/createRoactIndex");
const pointer_1 = require("../../util/pointer");
function transformJsxFragment(state, node) {
    if (state.compilerOptions.jsxFragmentFactory !== "Roact.createFragment") {
        DiagnosticService_1.DiagnosticService.addSingleDiagnostic(diagnostics_1.errors.invalidJsxFragmentFactory(node));
        return luau_ast_1.default.none();
    }
    const childrenPtr = (0, pointer_1.createMixedTablePointer)("children");
    (0, transformJsxChildren_1.transformJsxChildren)(state, node.children, (0, pointer_1.createMapPointer)("attributes"), childrenPtr);
    const args = new Array();
    if (luau_ast_1.default.isAnyIdentifier(childrenPtr.value) || !luau_ast_1.default.list.isEmpty(childrenPtr.value.fields)) {
        args.push(childrenPtr.value);
    }
    return luau_ast_1.default.call((0, createRoactIndex_1.createRoactIndex)("createFragment"), args);
}
exports.transformJsxFragment = transformJsxFragment;
//# sourceMappingURL=transformJsxFragment.js.map