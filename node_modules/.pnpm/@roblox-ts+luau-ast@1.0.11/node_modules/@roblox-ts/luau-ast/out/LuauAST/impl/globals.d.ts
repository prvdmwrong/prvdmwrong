import * as luau from "../bundle";
export declare const globals: {
    _G: luau.Identifier;
    TS: luau.Identifier;
    assert: luau.Identifier;
    bit32: luau.Identifier;
    coroutine: {
        yield: luau.PropertyAccessExpression;
    };
    error: luau.Identifier;
    exports: luau.Identifier;
    getmetatable: luau.Identifier;
    ipairs: luau.Identifier;
    next: luau.Identifier;
    pairs: luau.Identifier;
    pcall: luau.Identifier;
    require: luau.Identifier;
    script: luau.Identifier;
    select: luau.Identifier;
    self: luau.Identifier;
    setmetatable: luau.Identifier;
    string: {
        byte: luau.PropertyAccessExpression;
        find: luau.PropertyAccessExpression;
        format: luau.PropertyAccessExpression;
        gmatch: luau.PropertyAccessExpression;
        gsub: luau.PropertyAccessExpression;
        lower: luau.PropertyAccessExpression;
        match: luau.PropertyAccessExpression;
        rep: luau.PropertyAccessExpression;
        reverse: luau.PropertyAccessExpression;
        split: luau.PropertyAccessExpression;
        sub: luau.PropertyAccessExpression;
        upper: luau.PropertyAccessExpression;
    };
    super: luau.Identifier;
    table: {
        clear: luau.PropertyAccessExpression;
        clone: luau.PropertyAccessExpression;
        concat: luau.PropertyAccessExpression;
        create: luau.PropertyAccessExpression;
        find: luau.PropertyAccessExpression;
        freeze: luau.PropertyAccessExpression;
        insert: luau.PropertyAccessExpression;
        isfrozen: luau.PropertyAccessExpression;
        maxn: luau.PropertyAccessExpression;
        move: luau.PropertyAccessExpression;
        pack: luau.PropertyAccessExpression;
        remove: luau.PropertyAccessExpression;
        sort: luau.PropertyAccessExpression;
        unpack: luau.PropertyAccessExpression;
    };
    utf8: {
        charpattern: luau.PropertyAccessExpression;
        codes: luau.PropertyAccessExpression;
    };
    math: {
        min: luau.PropertyAccessExpression;
    };
    tostring: luau.Identifier;
    type: luau.Identifier;
    typeof: luau.Identifier;
    unpack: luau.Identifier;
    game: luau.Identifier;
};
